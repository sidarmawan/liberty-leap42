##### Copy controller config directory to /root and execute all commands inside controller directory #####
cd /root/controller

##### IP Address, Gateway, DNS Resolver & Hostname #####
yast2

##### Name Resolution #####
echo "10.10.10.20 compute" >> /etc/hosts
echo "10.10.10.30 block" >> /etc/hosts
echo "10.10.10.40 object0" >> /etc/hosts
echo "10.10.10.41 object1" >> /etc/hosts
reboot

##### NTP Service #####
echo "server 0.opensuse.pool.ntp.org iburst" >> /etc/ntp.conf
echo "server 1.opensuse.pool.ntp.org iburst" >> /etc/ntp.conf
echo "server 2.opensuse.pool.ntp.org iburst" >> /etc/ntp.conf
echo "server 3.opensuse.pool.ntp.org iburst" >> /etc/ntp.conf
systemctl enable ntpd.service
systemctl start ntpd.service

##### Repositories #####
zypper -n rm iproute2
zypper in --no-recommends http://download.opensuse.org/update/13.2/x86_64/iproute2-3.16-2.7.1.x86_64.rpm
zypper al iproute2
zypper ar -f obs://Cloud:OpenStack:Liberty/openSUSE_Leap_42.1 Liberty
zypper mr -era
zypper --gpg-auto-import-keys ref && zypper -n up --skip-interactive
zypper -n in --no-recommends python-openstackclient
reboot

##### MySQL Database Service #####
zypper -n in --no-recommends mysql-community-server mysql-community-server-client python-PyMySQL
cp etc/my.cnf.d/mysql_openstack.cnf /etc/my.cnf.d/mysql_openstack.cnf
systemctl enable mysql.service
systemctl start mysql.service
mysql -e "UPDATE mysql.user SET Password=PASSWORD('PASSWORD') WHERE User='root';"
mysql -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
mysql -e "DELETE FROM mysql.user WHERE User='';"
mysql -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\_%';"
mysql -e "FLUSH PRIVILEGES;"

##### RabbitMQ Service #####
zypper -n in --no-recommends rabbitmq-server
cp /etc/systemd/system/epmd.socket /etc/systemd/system/epmd.socket.orig
cp etc/systemd/system/epmd.socket /etc/systemd/system/epmd.socket
systemctl enable epmd.service
systemctl restart epmd.service
sleep 5
systemctl enable rabbitmq-server.service
systemctl start rabbitmq-server.service
rabbitmqctl add_user openstack PASSWORD
rabbitmqctl set_permissions openstack ".*" ".*" ".*"

##### Keystone Identity Service #####
mysql -u root -pPASSWORD -e "CREATE DATABASE keystone; GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY 'PASSWORD'; GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'PASSWORD';"
zypper -n in --no-recommends openstack-keystone apache2-mod_wsgi memcached python-python-memcached python-dateutil python-pyOpenSSL python-pycrypto python-repoze.who
systemctl enable memcached.service
systemctl start memcached.service
cp /etc/keystone/keystone.conf /etc/keystone/keystone.conf.orig
cp etc/keystone/keystone.conf /etc/keystone/keystone.conf
su -s /bin/sh -c "keystone-manage db_sync" keystone
cp /etc/sysconfig/apache2 /etc/sysconfig/apache2.orig
cp etc/sysconfig/apache2 /etc/sysconfig/apache2
cp etc/apache2/conf.d/wsgi-keystone.conf /etc/apache2/conf.d/wsgi-keystone.conf
chown -R keystone:keystone /etc/keystone
a2enmod version
systemctl enable apache2.service
systemctl start apache2.service

##### Service Entity and API Endpoints #####
export OS_TOKEN=989043457bc44d941be4
export OS_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
openstack service create --name keystone --description "OpenStack Identity" identity
openstack endpoint create --region RegionOne identity public http://controller:5000/v2.0
openstack endpoint create --region RegionOne identity internal http://controller:5000/v2.0
openstack endpoint create --region RegionOne identity admin http://controller:35357/v2.0
openstack project create --domain default --description "Admin Project" admin
openstack user create --domain default --password PASSWORD admin
openstack role create admin
openstack role add --project admin --user admin admin
openstack project create --domain default --description "Service Project" service
openstack role create user
openstack --os-auth-url http://controller:35357/v3 --os-project-domain-id default --os-user-domain-id default --os-project-name admin --os-username admin --os-auth-type password --os-password PASSWORD token issue
cp root/admin-openrc.sh /root/admin-openrc.sh
unset OS_TOKEN OS_URL OS_IDENTITY_API_VERSION
source /root/admin-openrc.sh 
openstack token issue

##### Glance Image Service #####
mysql -u root -pPASSWORD -e "CREATE DATABASE glance; GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'PASSWORD'; GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'PASSWORD';"
source /root/admin-openrc.sh
openstack user create --domain default --password PASSWORD glance
openstack role add --project service --user glance admin
openstack service create --name glance --description "OpenStack Image service" image
openstack endpoint create --region RegionOne image public http://controller:9292
openstack endpoint create --region RegionOne image internal http://controller:9292
openstack endpoint create --region RegionOne image admin http://controller:9292
zypper -n in --no-recommends openstack-glance python-glanceclient
cp /etc/glance/glance-api.conf /etc/glance/glance-api.conf.orig
cp etc/glance/glance-api.conf /etc/glance/glance-api.conf
cp /etc/glance/glance-registry.conf /etc/glance/glance-registry.conf.orig
cp etc/glance/glance-registry.conf /etc/glance/glance-registry.conf
chown root:glance /etc/glance/glance-api.conf /etc/glance/glance-registry.conf
systemctl enable openstack-glance-api.service openstack-glance-registry.service
systemctl start openstack-glance-api.service openstack-glance-registry.service
glance image-list

##### Nova Compute Service #####
mysql -u root -pPASSWORD -e "CREATE DATABASE nova; GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'PASSWORD'; GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY 'PASSWORD';"
source /root/admin-openrc.sh
openstack user create --domain default --password PASSWORD nova
openstack role add --project service --user nova admin
openstack service create --name nova --description "OpenStack Compute" compute
openstack endpoint create --region RegionOne compute public http://controller:8774/v2/%\(tenant_id\)s
openstack endpoint create --region RegionOne compute internal http://controller:8774/v2/%\(tenant_id\)s
openstack endpoint create --region RegionOne compute admin http://controller:8774/v2/%\(tenant_id\)s
zypper -n in --no-recommends openstack-nova-api openstack-nova-scheduler openstack-nova-cert openstack-nova-conductor openstack-nova-consoleauth openstack-nova-novncproxy python-novaclient iptables
cp /etc/nova/nova.conf /etc/nova/nova.conf.orig
cp etc/nova/nova.conf /etc/nova/nova.conf
chown root:nova /etc/nova/nova.conf
systemctl enable openstack-nova-api.service openstack-nova-cert.service openstack-nova-consoleauth.service openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service
systemctl start openstack-nova-api.service openstack-nova-cert.service openstack-nova-consoleauth.service openstack-nova-scheduler.service openstack-nova-conductor.service openstack-nova-novncproxy.service
nova service-list
nova endpoints
nova image-list

##### Neutron Networking Service #####
mysql -u root -pPASSWORD -e "CREATE DATABASE neutron; GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'PASSWORD'; GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'PASSWORD';"
source /root/admin-openrc.sh
openstack user create --domain default --password PASSWORD neutron
openstack role add --project service --user neutron admin
openstack service create --name neutron --description "OpenStack Networking" network
openstack endpoint create --region RegionOne network public http://controller:9696
openstack endpoint create --region RegionOne network internal http://controller:9696
openstack endpoint create --region RegionOne network admin http://controller:9696
zypper -n in --no-recommends openstack-neutron openstack-neutron-server openstack-neutron-linuxbridge-agent openstack-neutron-l3-agent openstack-neutron-dhcp-agent openstack-neutron-metadata-agent ipset bridge-utils
cp /etc/neutron/neutron.conf /etc/neutron/neutron.conf.orig
cp etc/neutron/neutron.conf /etc/neutron/neutron.conf
chown root:neutron /etc/neutron/neutron.conf
cp /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugins/ml2/ml2_conf.ini.orig
cp etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugins/ml2/ml2_conf.ini
cp /etc/neutron/plugins/ml2/linuxbridge_agent.ini /etc/neutron/plugins/ml2/linuxbridge_agent.ini.orig
cp etc/neutron/plugins/ml2/linuxbridge_agent.ini /etc/neutron/plugins/ml2/linuxbridge_agent.ini
cp /etc/neutron/dhcp_agent.ini /etc/neutron/dhcp_agent.ini.orig
cp etc/neutron/dhcp_agent.ini /etc/neutron/dhcp_agent.ini
cp etc/neutron/dnsmasq-neutron.conf /etc/neutron/dnsmasq-neutron.conf
cp /etc/neutron/metadata_agent.ini /etc/neutron/metadata_agent.ini.orig
cp etc/neutron/metadata_agent.ini /etc/neutron/metadata_agent.ini
systemctl enable openstack-neutron.service openstack-neutron-linuxbridge-agent.service openstack-neutron-dhcp-agent.service openstack-neutron-metadata-agent.service openstack-neutron-l3-agent.service
systemctl start openstack-neutron.service openstack-neutron-linuxbridge-agent.service openstack-neutron-dhcp-agent.service openstack-neutron-metadata-agent.service openstack-neutron-l3-agent.service
neutron ext-list
neutron agent-list

##### Horizon Dashboard #####
zypper -n in --no-recommends openstack-dashboard
cp /etc/apache2/conf.d/openstack-dashboard.conf.sample /etc/apache2/conf.d/openstack-dashboard.conf
a2enmod rewrite;a2enmod ssl;a2enmod wsgi
cp /srv/www/openstack-dashboard/openstack_dashboard/local/local_settings.py /srv/www/openstack-dashboard/openstack_dashboard/local/local_settings.py.orig
cp srv/www/openstack-dashboard/openstack_dashboard/local/local_settings.py /srv/www/openstack-dashboard/openstack_dashboard/local/local_settings.py
chown wwwrun:www /srv/www/openstack-dashboard/openstack_dashboard/local/local_settings.py
systemctl enable apache2.service memcached.service
systemctl restart apache2.service memcached.service

##### Launch Instance Using CLI #####

#0 Login as admin with password PASSWORD
source /root/admin-openrc.sh

#1 Create images
wget http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img
glance image-create --name "cirros-0.3.4-x86_64" --file cirros-0.3.4-x86_64-disk.img --disk-format qcow2 --container-format bare --visibility public --progress

#2 Create public network
neutron net-create net-public --shared --provider:physical_network public --provider:network_type flat --router:external

#3 Create public subnet
neutron subnet-create net-public 172.16.10.0/24 --name subnet-public --allocation-pool start=172.16.10.100,end=172.16.10.199 --dns-nameserver 8.8.8.8 --gateway 172.16.10.254

#4 Create project
openstack project create --domain default --description "openSUSE Project" opensuse

#5 Create user
openstack user create --domain default --password PASSWORD utian
openstack role add --project opensuse --user utian user

#7 Login as user
source /root/utian-openrc.sh

#8 Add SSH key
nova keypair-add --pub-key .ssh/id_rsa.pub utian
nova keypair-list

#9 Add security group rules
nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0
nova secgroup-add-rule default tcp 22 22 0.0.0.0/0

#10 Create private network
neutron net-create net-private

#11 Create private subnet
neutron subnet-create net-private 192.168.10.0/24 --name subnet-private --dns-nameserver 8.8.8.8 --gateway 192.168.10.254

#12 Create router
neutron router-create opensuse-router
neutron router-gateway-set opensuse-router net-public
neutron router-interface-add opensuse-router subnet-private

#13 Launch instance
neutron net-list
nova boot --flavor m1.tiny --image cirros-0.3.4-x86_64 --nic net-id=net-private --security-group default --key-name key-utian cirros
nova list
nova get-vnc-console cirros novnc

#14 Floating IP address
neutron floatingip-create net-public
nova floating-ip-associate cirros 172.16.10.199
nova list


##### Cinder Block Storage Service #####
mysql -u root -pPASSWORD -e "CREATE DATABASE cinder; GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'localhost' IDENTIFIED BY 'PASSWORD'; GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'%' IDENTIFIED BY 'PASSWORD';"
source /root/admin-openrc.sh
openstack user create --domain default --password PASSWORD cinder
openstack role add --project service --user cinder admin
openstack service create --name cinder --description "OpenStack Block Storage" volume
openstack service create --name cinderv2 --description "OpenStack Block Storage" volumev2
openstack endpoint create --region RegionOne volume public http://controller:8776/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne volume internal http://controller:8776/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne volume admin http://controller:8776/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne volumev2 public http://controller:8776/v2/%\(tenant_id\)s
openstack endpoint create --region RegionOne volumev2 internal http://controller:8776/v2/%\(tenant_id\)s
openstack endpoint create --region RegionOne volumev2 admin http://controller:8776/v2/%\(tenant_id\)s
zypper -n in --no-recommends openstack-cinder-api openstack-cinder-scheduler python-cinderclient
cp /etc/cinder/cinder.conf /etc/cinder/cinder.conf.orig
cp etc/cinder/cinder.conf /etc/cinder/cinder.conf
chown root:cinder /etc/cinder/cinder.conf
su -s /bin/sh -c "cinder-manage db sync" cinder
systemctl enable openstack-cinder-api.service openstack-cinder-scheduler.service
systemctl start openstack-cinder-api.service openstack-cinder-scheduler.service
cinder service-list


##### Heat Orchestration Service #####
mysql -u root -pPASSWORD -e "CREATE DATABASE heat; GRANT ALL PRIVILEGES ON heat.* TO 'heat'@'localhost' IDENTIFIED BY 'PASSWORD'; GRANT ALL PRIVILEGES ON heat.* TO 'heat'@'%' IDENTIFIED BY 'PASSWORD';"
source /root/admin-openrc.sh
openstack user create --domain default --password PASSWORD heat
openstack role add --project service --user heat admin
openstack service create --name heat --description "Orchestration" orchestration
openstack service create --name heat-cfn --description "Orchestration"  cloudformation
openstack endpoint create --region RegionOne orchestration public http://controller:8004/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne orchestration internal http://controller:8004/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne orchestration admin http://controller:8004/v1/%\(tenant_id\)s
openstack endpoint create --region RegionOne cloudformation public http://controller:8000/v1
openstack endpoint create --region RegionOne cloudformation internal http://controller:8000/v1
openstack endpoint create --region RegionOne cloudformation admin http://controller:8000/v1
openstack domain create --description "Stack projects and users" heat
openstack user create --domain heat --password PASSWORD heat_domain_admin
openstack role add --domain heat --user heat_domain_admin admin
openstack role create heat_stack_owner
openstack role add --project admin --user admin heat_stack_owner
openstack role create heat_stack_user
zypper -n in --no-recommends openstack-heat-api openstack-heat-api-cfn openstack-heat-engine python-heatclient
cp /etc/heat/heat.conf /etc/heat/heat.conf.orig
cp etc/heat/heat.conf /etc/heat/heat.conf
chown root:heat /etc/heat/heat.conf
su -s /bin/sh -c "heat-manage db_sync" heat
systemctl enable openstack-heat-api.service openstack-heat-api-cfn.service openstack-heat-engine.service
systemctl start openstack-heat-api.service openstack-heat-api-cfn.service openstack-heat-engine.service

source /root/admin-openrc.sh
heat service-list
cp root/heat_template.yml /root/heat_template.yml
cat /root/heat_template.yml
neutron net-list
export NET_ID=$(neutron net-list | awk '/ net-private / { print $2 }')
heat stack-create -f /root/heat_template.yml -P "ImageID=cirros;NetID=$NET_ID" stack
heat stack-list
heat output-show --all stack
nova list
heat stack-delete stack


##### Ceilometer Telemetry Service #####
zypper ar -f obs://server:database/openSUSE_Leap_42.1 Database
zypper -n in --no-recommends mongodb
cp /etc/mongodb.conf /etc/mongodb.conf.orig
cp etc/mongodb.conf /etc/mongodb.conf
systemctl enable mongodb.service
systemctl start mongodb.service
mongo --host localhost --eval 'db = db.getSiblingDB("ceilometer"); db.addUser({user: "ceilometer", pwd: "PASSWORD", roles: [ "readWrite", "dbAdmin" ]})'
source /root/admin-openrc.sh
openstack user create --domain default --password PASSWORD ceilometer
openstack role add --project service --user ceilometer admin
openstack service create --name ceilometer --description "Telemetry" metering
openstack endpoint create --region RegionOne metering public http://controller:8777
openstack endpoint create --region RegionOne metering internal http://controller:8777
openstack endpoint create --region RegionOne metering admin http://controller:8777
zypper -n in --no-recommends openstack-ceilometer-api openstack-ceilometer-collector openstack-ceilometer-agent-notification openstack-ceilometer-agent-central python-ceilometerclient openstack-ceilometer-alarm-evaluator openstack-ceilometer-alarm-notifier
cp /etc/ceilometer/ceilometer.conf /etc/ceilometer/ceilometer.conf.orig
cp etc/ceilometer/ceilometer.conf /etc/ceilometer/ceilometer.conf
chown root:ceilometer /etc/ceilometer/ceilometer.conf
systemctl enable openstack-ceilometer-api.service openstack-ceilometer-agent-notification.service openstack-ceilometer-agent-central.service openstack-ceilometer-collector.service openstack-ceilometer-alarm-evaluator.service openstack-ceilometer-alarm-notifier.service
systemctl start openstack-ceilometer-api.service openstack-ceilometer-agent-notification.service openstack-ceilometer-agent-central.service openstack-ceilometer-collector.service openstack-ceilometer-alarm-evaluator.service openstack-ceilometer-alarm-notifier.service
cp etc/glance/glance-api.conf /etc/glance/glance-api.conf
cp etc/glance/glance-registry.conf /etc/glance/glance-registry.conf
chown root:glance /etc/glance/glance-api.conf /etc/glance/glance-registry.conf
systemctl restart openstack-glance-api.service openstack-glance-registry.service

source /root/admin-openrc.sh
ceilometer meter-list
IMAGE_ID=$(glance image-list | grep 'cirros' | awk '{ print $2 }')
glance image-download $IMAGE_ID > /tmp/cirros.img
ceilometer meter-list
ceilometer statistics -m image.download -p 60
rm -rf /tmp/cirros.img


##### Swift Object Storage #####
source /root/admin-openrc.sh
openstack user create --domain default --password PASSWORD swift
openstack role add --project service --user swift admin
openstack service create --name swift --description "OpenStack Object Storage" object-store
openstack endpoint create --region RegionOne object-store public http://controller:8080/v1/AUTH_%\(tenant_id\)s
openstack endpoint create --region RegionOne object-store internal http://controller:8080/v1/AUTH_%\(tenant_id\)s
openstack endpoint create --region RegionOne object-store admin http://controller:8080/v1
zypper -n in --no-recommends openstack-swift-proxy python-swiftclient python-keystoneclient python-keystonemiddleware python-xml memcached
cp /etc/swift/proxy-server.conf /etc/swift/proxy-server.conf.orig
cp etc/swift/proxy-server.conf /etc/swift/proxy-server.conf

###Now execute Swift section commands on object0 and object1 node. After that, continue execute following commands###

cd /etc/swift
swift-ring-builder account.builder create 10 3 1
swift-ring-builder account.builder add --region 1 --zone 1 --ip 10.10.10.40 --port 6002 --device sdb --weight 100
swift-ring-builder account.builder add --region 1 --zone 2 --ip 10.10.10.40 --port 6002 --device sdc --weight 100
swift-ring-builder account.builder add --region 1 --zone 3 --ip 10.10.10.41 --port 6002 --device sdb --weight 100
swift-ring-builder account.builder add --region 1 --zone 4 --ip 10.10.10.41 --port 6002 --device sdc --weight 100
swift-ring-builder account.builder
swift-ring-builder account.builder rebalance
cd /etc/swift
swift-ring-builder container.builder create 10 3 1
swift-ring-builder container.builder add --region 1 --zone 1 --ip 10.10.10.40 --port 6001 --device sdb --weight 100
swift-ring-builder container.builder add --region 1 --zone 2 --ip 10.10.10.40 --port 6001 --device sdc --weight 100
swift-ring-builder container.builder add --region 1 --zone 3 --ip 10.10.10.41 --port 6001 --device sdb --weight 100
swift-ring-builder container.builder add --region 1 --zone 4 --ip 10.10.10.41 --port 6001 --device sdc --weight 100
swift-ring-builder container.builder
swift-ring-builder container.builder rebalance
cd /etc/swift
swift-ring-builder object.builder create 10 3 1
swift-ring-builder object.builder add --region 1 --zone 1 --ip 10.10.10.40 --port 6000 --device sdb --weight 100
swift-ring-builder object.builder add --region 1 --zone 2 --ip 10.10.10.40 --port 6000 --device sdc --weight 100
swift-ring-builder object.builder add --region 1 --zone 3 --ip 10.10.10.41 --port 6000 --device sdb --weight 100
swift-ring-builder object.builder add --region 1 --zone 4 --ip 10.10.10.41 --port 6000 --device sdc --weight 100
swift-ring-builder object.builder
swift-ring-builder object.builder rebalance
cd

scp /etc/swift/*.gz 10.10.10.40:/etc/swift/
scp /etc/swift/*.gz 10.10.10.41:/etc/swift/

cp /etc/swift/swift.conf /etc/swift/swift.conf.orig
cp etc/swift/swift.conf /etc/swift/swift.conf
chown -R root:swift /etc/swift
systemctl enable openstack-swift-proxy.service memcached.service
systemctl start openstack-swift-proxy.service memcached.service

cp root/admin-openrc.sh /root/admin-openrc.sh
source /root/admin-openrc.sh
swift stat
echo "test" > file1
swift upload container1 file1
swift list
swift download container1 file1
